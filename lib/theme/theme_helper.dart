import 'dart:ui';
import 'package:flutter/material.dart';
import 'package:fast_ai/core/utils/pref_utils.dart';
import 'package:fast_ai/core/utils/size_utils.dart';
import 'package:get/get.dart';

/// Helper class for managing themes and colors.
class ThemeHelper {
  // The current app theme
  var _appTheme = PrefUtils().getThemeData();

// A map of custom color themes supported by the app
  Map<String, PrimaryColors> _supportedCustomColor = {
    'primary': PrimaryColors()
  };

// A map of color schemes supported by the app
  Map<String, ColorScheme> _supportedColorScheme = {
    'primary': ColorSchemes.primaryColorScheme
  };

  /// Changes the app theme to [_newTheme].
  void changeTheme(String _newTheme) {
    PrefUtils().setThemeData(_newTheme);
    Get.forceAppUpdate();
  }

  /// Returns the primary colors for the current theme.
  PrimaryColors _getThemeColors() {
    //throw exception to notify given theme is not found or not generated by the generatorif (!_supportedCustomColor.containsKey(_appTheme)){  throw Exception(               "$_appTheme is not found.Make sure you have added this theme class in JSON Try running flutter pub run build_runner");      } //return theme from map
    return _supportedCustomColor[_appTheme] ?? PrimaryColors();
  }

  /// Returns the current theme data.
  ThemeData _getThemeData() {
    //throw exception to notify given theme is not found or not generated by the generator if (!_supportedColorScheme.containsKey(_appTheme)){   throw Exception(                "$_appTheme is not found.Make sure you have added this theme class in JSON Try running flutter pub run build_runner");       }  //return theme from map
    var colorScheme =
        _supportedColorScheme[_appTheme] ?? ColorSchemes.primaryColorScheme;
    return ThemeData(
      visualDensity: VisualDensity.standard,
      colorScheme: colorScheme,
      textTheme: TextThemes.textTheme(colorScheme),
      scaffoldBackgroundColor: appTheme.whiteA700,
      elevatedButtonTheme: ElevatedButtonThemeData(
        style: ElevatedButton.styleFrom(
          backgroundColor: colorScheme.primary,
          shape: RoundedRectangleBorder(
            borderRadius: BorderRadius.circular(14),
          ),
          visualDensity: const VisualDensity(
            vertical: -4,
            horizontal: -4,
          ),
          padding: EdgeInsets.zero,
        ),
      ),
      floatingActionButtonTheme: FloatingActionButtonThemeData(
        backgroundColor: appTheme.greenA70001,
      ),
      dividerTheme: DividerThemeData(
        thickness: 1,
        space: 1,
        color: appTheme.gray90007,
      ),
    );
  }

  /// Returns the primary colors for the current theme.
  PrimaryColors themeColor() => _getThemeColors();

  /// Returns the current theme data.
  ThemeData themeData() => _getThemeData();
}

/// Class containing the supported text theme styles.
class TextThemes {
  static TextTheme textTheme(ColorScheme colorScheme) => TextTheme(
        displayLarge: TextStyle(
          color: appTheme.whiteA700,
          fontSize: 52.fSize,
          fontFamily: 'Racing Sans One',
          fontWeight: FontWeight.w400,
        ),
        displayMedium: TextStyle(
          color: appTheme.whiteA700,
          fontSize: 48.fSize,
          fontFamily: 'Rajdhani',
          fontWeight: FontWeight.w700,
        ),
        displaySmall: TextStyle(
          color: appTheme.whiteA700,
          fontSize: 34.fSize,
          fontFamily: 'Rajdhani',
          fontWeight: FontWeight.w700,
        ),
        headlineLarge: TextStyle(
          color: appTheme.whiteA700,
          fontSize: 30.fSize,
          fontFamily: 'Rajdhani',
          fontWeight: FontWeight.w700,
        ),
        headlineMedium: TextStyle(
          color: appTheme.whiteA700,
          fontSize: 28.fSize,
          fontFamily: 'Rajdhani',
          fontWeight: FontWeight.w700,
        ),
        headlineSmall: TextStyle(
          color: appTheme.whiteA700,
          fontSize: 24.fSize,
          fontFamily: 'Rajdhani',
          fontWeight: FontWeight.w700,
        ),
        labelLarge: TextStyle(
          color: appTheme.blueGray400,
          fontSize: 12.fSize,
          fontFamily: 'Rajdhani',
          fontWeight: FontWeight.w600,
        ),
        labelSmall: TextStyle(
          color: appTheme.whiteA700,
          fontSize: 8.fSize,
          fontFamily: 'Rajdhani',
          fontWeight: FontWeight.w600,
        ),
        titleLarge: TextStyle(
          color: appTheme.whiteA700,
          fontSize: 20.fSize,
          fontFamily: 'Rajdhani',
          fontWeight: FontWeight.w600,
        ),
        titleMedium: TextStyle(
          color: appTheme.whiteA700,
          fontSize: 18.fSize,
          fontFamily: 'Rajdhani',
          fontWeight: FontWeight.w600,
        ),
        titleSmall: TextStyle(
          color: appTheme.whiteA700,
          fontSize: 14.fSize,
          fontFamily: 'Rajdhani',
          fontWeight: FontWeight.w600,
        ),
      );
}

/// Class containing the supported color schemes.
class ColorSchemes {
  static final primaryColorScheme = ColorScheme.light(
    // Primary colors
    primary: Color(0XFF806DFF),
    primaryContainer: Color(0XFF1C2301),
    secondaryContainer: Color(0X28787880),

    // Error colors
    errorContainer: Color(0XFFFF1A1A),
    onError: Color(0XFF6D8470),
    onErrorContainer: Color(0XFF040015),

    // On colors(text colors)
    onPrimary: Color(0XFF2E0C00),
    onPrimaryContainer: Color(0XFFA7ACBD),
    onSecondaryContainer: Color(0XFF0B1026),
  );
}

/// Class containing custom colors for a primary theme.
class PrimaryColors {
  // Black
  Color get black900 => Color(0XFF00020C);
  Color get black90001 => Color(0XFF030015);
  Color get black90002 => Color(0XFF002504);
  Color get black90003 => Color(0XFF000000);

  // Blue
  Color get blue700 => Color(0XFF1976D2);
  Color get blueA700 => Color(0XFF0C6DFF);

  // BlueGray
  Color get blueGray100 => Color(0XFFD9D9D9);
  Color get blueGray400 => Color(0XFF788495);
  Color get blueGray600 => Color(0XFF54717B);
  Color get blueGray60001 => Color(0XFF54707B);
  Color get blueGray700 => Color(0XFF296279);
  Color get blueGray800 => Color(0XFF1C4C5E);
  Color get blueGray900 => Color(0XFF252A3F);

  // DeepPurple
  Color get deepPurpleA200 => Color(0XFFA449FF);

  // Gray
  Color get gray50 => Color(0XFFFDF9F8);
  Color get gray500 => Color(0XFF9B9F89);
  Color get gray50001 => Color(0XFFB1859C);
  Color get gray50002 => Color(0XFFB1859B);
  Color get gray5001 => Color(0XFFF8F9FD);
  Color get gray600 => Color(0XFF857069);
  Color get gray60001 => Color(0XFF898572);
  Color get gray60002 => Color(0XFF898573);
  Color get gray60003 => Color(0XFF847068);
  Color get gray60004 => Color(0XFF847A76);
  Color get gray60005 => Color(0XFF728975);
  Color get gray700 => Color(0XFF615C44);
  Color get gray70001 => Color(0XFF605B44);
  Color get gray800 => Color(0XFF494014);
  Color get gray80001 => Color(0XFF494015);
  Color get gray80002 => Color(0XFF453B3D);
  Color get gray900 => Color(0XFF0F3B15);
  Color get gray90001 => Color(0XFF3F1100);
  Color get gray90002 => Color(0XFF251E00);
  Color get gray90003 => Color(0XFF502616);
  Color get gray90004 => Color(0XFF2F3908);
  Color get gray90005 => Color(0XFF2F0C00);
  Color get gray90006 => Color(0XFF0F3C15);
  Color get gray90007 => Color(0XFF1E1E1E);
  Color get gray90008 => Color(0XFF013508);
  Color get gray90009 => Color(0XFF273100);
  Color get gray90010 => Color(0XFF283300);

  // Green
  Color get green50 => Color(0XFFE5F4E7);
  Color get green500 => Color(0XFF34C759);
  Color get green800 => Color(0XFF356C3C);
  Color get greenA200 => Color(0XFF4EFF95);
  Color get greenA700 => Color(0XFF27C365);
  Color get greenA70001 => Color(0XFF27C366);

  // Indigo
  Color get indigo300 => Color(0XFF68A4C1);
  Color get indigo50 => Color(0XFFE8E9F1);

  // LightBlue
  Color get lightBlue900 => Color(0XFF276989);

  // LightGreen
  Color get lightGreen800 => Color(0XFF5D6B26);

  // Red
  Color get redA100 => Color(0XFFFF9191);
  Color get redA10001 => Color(0XFFFD8686);
  Color get redA200 => Color(0XFFFF4949);

  // Teal
  Color get teal900 => Color(0XFF0F3E4F);
  Color get teal90001 => Color(0XFF002F40);
  Color get teal90002 => Color(0XFF022D3D);
  Color get teal90003 => Color(0XFF134659);
  Color get teal90004 => Color(0XFF032E3E);
  Color get teal90005 => Color(0XFF103E50);

  // White
  Color get whiteA700 => Color(0XFFFFFFFF);

  // Yellow
  Color get yellow500 => Color(0XFFFFE928);
}

PrimaryColors get appTheme => ThemeHelper().themeColor();
ThemeData get theme => ThemeHelper().themeData();
